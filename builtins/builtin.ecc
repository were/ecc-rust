func println(string s) -> void {
  print(s);
  print("\n");
  return;
}

func toString(i32 x) -> string {
  let i32 cnt = 0;
  let i32 tmpx = x;
  let i32 neg = 0;
  if tmpx < 0 {
    tmpx = 0 - tmpx;
    neg = 1;
  }
  while tmpx > 0 {
    tmpx = tmpx / 10;
    cnt = cnt + 1;
  }
  if cnt == 0 {
    cnt = 1;
  }
  let i32 length = cnt + neg;
  let i8[] buffer = new i8[length];
  __print_int__(buffer.length());
  println("");
  if neg == 1 {
    buffer[0] = 45 as i8;
    x = 0 - x;
  }
  for i in 0..cnt {
    let i32 value = (x % 10 + 48);
    let i32 idx = neg + cnt - 1 - i;
    buffer[idx] = value as i8;
    x = x / 10;
  }
  __print_int__(buffer.length());
  println("");
  let string res = new string;
  res.data_ = buffer;
  __print_int__(res.length());
  println("");
  __print_int__(buffer.length());
  println("");
  return res;
}

class string {

  func length() -> i32 {
    return self.data_.length();
  }

  func parseInt() -> i32 {
    return 0;
  }

  func at(i32 i) -> i32 {
    return self.data_[i] as i32;
  }

  i8[] data_;
}

